{
  "description": "",
  "displayName": "IconButton",
  "filePath": "/Users/raghavan/Developer/solid-x/packages/material/src/IconButton/IconButton.tsx",
  "props": {
    "ariaExpanded": {
      "defaultValue": { "value": "undefined" },
      "description": "The value for setting aria-expanded attribute.",
      "name": "ariaExpanded",
      "required": false,
      "tags": {},
      "type": { "name": "boolean | \"false\" | \"true\"" }
    },
    "ariaHasPopup": {
      "defaultValue": { "value": "undefined" },
      "description": "The value for setting aria-haspopup attribute.",
      "name": "ariaHasPopup",
      "required": false,
      "tags": {},
      "type": {
        "name": "boolean | \"false\" | \"true\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\""
      }
    },
    "ariaLabel": {
      "defaultValue": { "value": "undefined" },
      "description": "The value for setting aria-label attribute.",
      "name": "ariaLabel",
      "required": false,
      "tags": {},
      "type": { "name": "string" }
    },
    "children": {
      "defaultValue": { "value": "undefined" },
      "description": "The icon to be displayed in the button.",
      "name": "children",
      "required": false,
      "tags": {},
      "type": { "name": "Element" }
    },
    "disabled": {
      "defaultValue": { "value": "false" },
      "description": "Whether or not the button is disabled.",
      "name": "disabled",
      "required": false,
      "tags": { "default": "false" },
      "type": { "name": "boolean" }
    },
    "href": {
      "defaultValue": { "value": "undefined" },
      "description": "The URL that the link button points to.",
      "name": "href",
      "required": false,
      "tags": {},
      "type": { "name": "string" }
    },
    "selected": {
      "defaultValue": { "value": "'false'" },
      "description": "The selected state of the button.",
      "name": "selected",
      "required": false,
      "tags": { "default": "'false'" },
      "type": { "name": "boolean" }
    },
    "selectedIcon": {
      "defaultValue": { "value": "undefined" },
      "description": "An optional icon to be used for the selected state. If no icon is provided\nthe default icon provided as a child will be used.",
      "name": "selectedIcon",
      "required": false,
      "tags": {},
      "type": { "name": "Element" }
    },
    "target": {
      "defaultValue": { "value": "undefined" },
      "description": "Where to display the linked `href` URL for a link button. For example\npass `_blank` to open the link in a new tab.",
      "name": "target",
      "required": false,
      "tags": {},
      "type": { "name": "string" }
    },
    "toggle": {
      "defaultValue": { "value": "'false'" },
      "description": "When true the button will toggle between selected and unselected states.",
      "name": "toggle",
      "required": false,
      "tags": { "default": "'false'" },
      "type": { "name": "boolean" }
    },
    "variant": {
      "defaultValue": { "value": "'standard'" },
      "description": "Specifies the visual variant of the button to use.",
      "name": "variant",
      "required": false,
      "tags": { "default": "'standard'" },
      "type": { "name": "\"filled\" | \"filledTonal\" | \"outlined\" | \"standard\"" }
    },
    "onAction": {
      "defaultValue": { "value": "undefined" },
      "description": "Specifies the callback to call when an action is performed on the button. This\nis either a pointer interaction like a click or keyboard interaction like pressing\nEnter or Space.",
      "name": "onAction",
      "required": false,
      "tags": { "param": "event The event object of the event that triggered the onAction" },
      "type": { "name": "((event: Event) => void)" }
    },
    "onSelectionChange": {
      "defaultValue": { "value": "undefined" },
      "description": "Specifies the callback to call when the Icon Button can be toggled between selected\nstates.",
      "name": "onSelectionChange",
      "required": false,
      "tags": { "param": "isSelected The next selection state." },
      "type": { "name": "((isSelected: boolean) => void)" }
    }
  },
  "tags": {},
  "filename": "/Users/raghavan/Developer/solid-x/packages/material/src/IconButton/IconButton.tsx",
  "name": "IconButton"
}
